REQUIREMENTS
============

* Apache HTTP Server (2.x or better) - other PHP enabled web servers should work, 
  yet we have only tested the installation through Apache HTTP Server
* PHP (5.x or better) configured to your web server
   * mysqli extension must be enabled (improved mysql library)
   * GD2 extension must be enabled (GD image library)
   * Enableing the PHP "mbstring" module is recommended
   * If planning to upload specimen data as flat DwC text files, 
     upload_max_filesize (= 2M as default) variable should be increased to 
     match expected files sizes
   * zip extension should be enabled if you plan on uploading compressed data files
* MySQL (5.x or better, yet 5.1 or better recommended)
* SVN Client - needed only for making use of a source code installation 



INSTRUCTIONS
============

1. Download Symbiota code from SourceForge repository
   http://sourceforge.net/scm/?type=svn&group_id=325583 
   * Unless you are installing as a developer who plans on contributing 
     future code to the project, you will probably want to checkout only 
     trunk (main development line). Following command will create a folder 
     named symbiota and checkout trunk within it: 
     ‘svn co https://symbiota.svn.sourceforge.net/svnroot/symbiota/trunk/ portal’
2. Install Symbiota database schema
   a. Create new database 
   b. Create read-only and read/write users for Symbiota database 
   c. Load schema from scripts. Schema definition files are located in 
      <SymbiotaBaseFolder>/config/schema/ and all start with db_schema. Database 
      can be installed with ISO-8859-1 or UTF8 character set definitions. 
      Note that source data needs to match database and website character 
      set definitions. If your MySQL database is a pre 5.1 version, you 
      must use the schema definitions with ver_5.0 in the name or an 
      syntax error will be thrown.
   d. Load Stored Procedures - Scripts located in 
      <SymbiotaBaseFolder>/config/schema/stored_procedures-x.x.x.sql
   e. Run database patch scripts available for upload version. 
      Make sure to run the scripts in the correct order. 
3. Configure the Symbiota Node - modify following configuration files
   a. Symbiota configuration - rename 
      <SymbiotaBaseFolder>/config/symbini_template.php to symbini.php. 
      Modify variables within to match your project environment. See 
      Symbiota configuration help page for more information on this 
      subject.
   b. Database connection - rename 
      <SymbiotaBaseFolder>/config/dbconnection_template.php
      to dbconnection.php. Add readonly and read/write usernames 
      and passwords to this file.
   c. Homepage – rename <SymbiotaBaseFolder>/index_template.php
      to index.php. This is your home page to which you 
      will need to add your introductory text.
   d. Layout - header.php, menu.php, and footer.php are used 
      by all pages to establish uniform layout. Within <SymbiotaBaseFolder>
      rename header_template.php, footer_template.php, and menu_template.php 
      to header.php, footer.php, and menu.php.  
      * header.php: Within file, change /images/layout/defaultheader.jpg 
        to /images/layout/header.jpg. Add your header to /images/layout/
        folder. Change /images/layput/defaultleftstrip.gif as desired. 
        Establishing the header using an image is easy, yet more 
        complex header configurations are possible. 
      * leftmenu.php: Add or remove menu items as desired. Login can be 
        left here or put into the header file.
      * footer.php: modify as you did with header.php file.
   e. Files for style control - Go to <SymbiotaBaseFolder>/css/ and 
      rename main_template.css and speciesprofile_template.css to 
      main.css and speciesprofile.css. Modify these files to match 
      desired style and layout for all pages. 



1. Data – The general layers of data within Symbiota are: user, 
   taxonomic, occurrence (specimen), images, checklist, identification 
   key, and taxon profile (common names, text descriptions, etc). 
   While user interfaces have been developed for web management of 
   some of the data layers, others are still in development and data 
   needs to be loaded by hand. Below are detailed instructions on 
   loading the different layers of data needed.
   a. User and permissions - Default administrative user has been 
      installed with following login: username = admin; password: admin.
      Make sure to change password or better yet, create a new admin user 
      (/profile/newprofile.php), assign admin rights (/profile/usermanagement.php), 
      and then delete default admin user. 
   b. Taxonomic Thesaurus - Taxon names are stored within the 'taxa' table. 
      Taxonomic hierarchy and placement definitions are controled in the 
      'taxstatus' table. A recursive data relationship within the 'taxstatus' 
      table defines the taxonomic hierarchy. While multiple taxonomic thesauri 
      can be defined, one of the thesauri needs to function as the central 
      taxonomy. Names must be added in order from upper taxonomic levels to 
      lower (e.g. kingdom, class, order… variety). Accepted names must be 
      loaded before non-accepted names. See Taxonomic Schema Page for more 
      details on taxonomic layout.  
      i. Names can be added one by one to the default thesaurus using: 
         /taxa/admin/taxonomyloader.php. Once entered, taxon names and 
         ranking can be edited via: /taxa/admin/taxonomydisplay.php 
      ii. Batch Loader - Multiple names can be loaded from a flat, 
         tab-delimited text file. See instructions on the Batch Taxon 
         Loader for detailed instructions. See instructions on the 
         batch loader for loading multiple names from a flat file.  
      iii. Look in /config/schema/data/ folder to find taxonomic 
         thesaurus data that may serve as a base for your taxonomic 
         thesaurus.
c. Occurrence (Specimen) Data - to be completed
   i. Loading a new collection
   ii. Establishing method for regular updates
d. Images - to be completed
e. Floristic data – to be completed
f. Identification key data – to be completed
g. Taxon Profile support data (common names, text descriptions, etc) - to be completed


UPDATES
=======
a. Code updates - If you installed through the SourceForge SVN repository, 
   code changes and bugs fixes can be integrated into your node on a regular 
   basis by running an SVN update.
   i.  Command line client: svn update 
   ii. Shell Client (windows): Right click on folder and select SVN Update
b. Database schema updates - Some php code updates will require the slight 
   modifications with the MySQL database. With each new version, a file 
   will be supplied with SQL statements that will modify the table schema 
   as needed.  


* Automatic updates will be enabled once a stable release is made public.
